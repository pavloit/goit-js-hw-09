{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAuBA,SAASC,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GACtB,IAAIC,SAAQ,CAACC,EAASC,KACpCC,YAAW,KACLN,EAEFI,IAGAC,GAAQ,GAETN,EAAM,IAERQ,MAAK,KACNZ,EAAAa,OAAOC,QAAQ,qBAAqBX,QAAeC,MAAU,IAE5DW,OAAM,KACPf,EAAAa,OAAOG,QAAQ,oBAAoBb,QAAeC,MAAU,G,CArCnDa,SAASC,cAAc,SAE/BC,iBAAiB,UAEtB,SAAkBC,GAChBA,EAAMC,iBACN,MAAMC,EAAO,IAAIC,SAASH,EAAMI,QAEhC,IAAIpB,EAAQqB,OAAOH,EAAKI,IAAI,UACxBC,EAAOF,OAAOH,EAAKI,IAAI,SACvBE,EAASH,OAAOH,EAAKI,IAAI,WAE7B,IAAK,IAAIG,EAAI,EAAGA,GAAKD,EAAQC,IACrB,IAANA,IAEIzB,GAASuB,GACbzB,EAAc2B,EAAGzB,E","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from \"notiflix\"; \n\n\nconst form = document.querySelector('.form');\n\nform.addEventListener('submit', onSubmit);\n\nfunction onSubmit(event) {\n  event.preventDefault()\n  const data = new FormData(event.target);\n\n  let delay = Number(data.get('delay'));\n  let step = Number(data.get('step'));\n  let amount = Number(data.get('amount'));\n  \n  for (let i = 1; i <= amount; i++) {\n    i === 1\n      ? delay \n      : delay += step\n    createPromise(i, delay)\n  }\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  const promise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        // Fulfill\n        resolve()\n      } else {\n        // Reject\n        reject()\n      } \n    }, delay)\n    })\n    .then(() => {\n    Notify.success(`Fulfilled promise ${position} in ${delay}ms`);\n    })\n    .catch(() => {\n    Notify.failure(`Rejected promise ${position} in ${delay}ms`);\n    });\n  \n  }\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","then","Notify","success","catch","failure","document","querySelector","addEventListener","event","preventDefault","data","FormData","target","Number","get","step","amount","i"],"version":3,"file":"03-promises.88afbc92.js.map"}